* Testing
** Unit tests
*** How do I test the controller?
*** Do we run statistical tests on the random elements? (Currently pending.) What tests?
**** Need to trade off rate of errors (false +ve and false -ve) against running time.
** Cucumber tests
*** How do I create these?

* Bugs
** It's possible for a user to get asked the same question twice.
*** There are enough questions that this isn't a big deal.
** We don't pay attention to generator.enabled.
** If no questions have been loaded, having an error message explaining this would be developer-friendly.
** We currently ignore SortedMultiset questions.

It looks like they act exactly the same as Sorted questions in the original game, except that duplicates are ignored when parsing the XML file.

(This is kind of weird. I would expect them to allow duplicates, just never ask users to compare between them?)

* We don't treat weight/question generation quite like the original game.

  Look at Assets/Scripts/QuestionsScript.cs. It looks like it shuffles the generators, then loops through them to create questions. When it gets to a generator, it skips it with probability (1-weight). So if there are five generators with a weight of 0.2, on average you'll see one of them each time through the list.

  This has the nice property that you almost never see the same generator twice in a row. But we can't easily replicate it. Currently we just skip generators with probability (1-weight) if they get selected, but there's nothing to stop the same generator coming up three times in a row. Future development: look at the previous generators used, exclude the last n from consideration.

* Add way to delete credence game data, possibly from settings page.

* Possible feature: try to give users questions such that they end up with a reasonable distribution of reported credences.

This is more complicated than just trying to give questions in categories they say they like. The two can presumably be combined.
