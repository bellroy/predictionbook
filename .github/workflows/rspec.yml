---
name: RSpec Test Suite
on:
- push
jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout branch
      uses: actions/checkout@v1
    - name: Install Linux dependencies
      run: sudo apt-get update -qq && sudo apt-get install -y libpq-dev
    - name: Set up Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 2.6.3
    - run: |
        for f in config/*.sample
        do
          echo "Copying $f to ${f%.*}"
          cp $f ${f%.*}
        done
    - name: Cache gems
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: "${{ runner.OS }}-gem-cache-${{ hashFiles('**/Gemfile.lock') }}"
        restore-keys: "${{ runner.OS }}-gem-cache-\n"
    - name: Install bundler
      run: (bundler -v | grep "2.0.2") || gem install bundler:2.0.2
    - name: Install gems
      run: bundle install --jobs $(nproc) --retry 3 --without metrics --deployment
    - name: Create cache directory
      run: mkdir -p tmp/cache
    - name: Load database structure
      run: bundle exec rake db:create db:schema:load
    - name: Run RSpec test suite
      run: bundle exec rspec spec
      env:
        METRICS: 1
    - name: Post to Slack if build fails
      if: failure()
      uses: pullreminders/slack-action@master
      env:
        SLACK_BOT_TOKEN: "${{ secrets.SLACK_BOT_TOKEN }}"
      with:
        args: '{\"channel\":\"C33574SJJ\",\"text\":\"*BUILD FAILURE*: ${{ github.repository
          }}\n*${{ github.actor }}* made some changes, hoping that they''d pass...
          those changes now are coming back to bite them in the... :boom:\", \"attachments\":
          [{ \"fallback\": \"Failure summary\", \"color\": \"#ff0000\", \"fields\":
          [{ \"title\": \"What broke\", \"value\": \"https://github.com/${{ github.repository
          }}/commit/${{ github.sha }}/checks\", \"short\": false }]}]}'
    services:
      postgres:
        image: postgres:10.10
        env:
          POSTGRES_USER: runner
          POSTGRES_DB: postgres
        ports:
        - 5432:5432
        options: "--health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5"
    env:
      PGHOST: localhost
      PGPORT: 5432
      RAILS_ENV: test
