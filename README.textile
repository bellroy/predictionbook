h1. Prediction Book

h3. Deployment

Predictionbook runs on AWS behind a load balancer.

h4. Preconbditions

* Install Amazon Command Line Tools and make them properly run
** http://aws.amazon.com/developertools/351?_encoding=UTF8&jiveRedirect=1
** http://www.techrepublic.com/blog/datacenter/how-to-use-the-command-line-with-amazons-ec2-api-tools/5574

h4. Building a new AMI for production

* Find the latest steak AMI (production.steak-build00XX) and start a new instance (micro is good enough, key pair is not necessary, security group: webservers)
* grab the public dns for the instance and put it in config/deploy/production.rb
* Deploy the app with capistrano
* Build an AMI after deployment and increase the build number in the name (production.steak-build00XY)

h4. Updating the Load Balancer

* Connect to the machine and sudo in as root
* cd /usr/local/sbin
* run ./aws-deploy-ami (build number: XY)

h4. Cleanup

* After a new instance was started, terminate the old steak instance (the one in the load balancer, not the one used for deployment)
* Cancel the script that keeps checking for the correct number of instances
* Fix the minimum number of instances after updating the auto scaling group:
  as-update-auto-scaling-group steak-production --max-size 10 --min-size 1 steak-production-build00XY
* Terminate the instance that was used for deployment

h3. Techinical Debt

* Use FactoryGirl. This will cause problems with models like @Prediction@ which override initialize.
* @Deliverer.default_url_options@ should be set via @config.action_mailer.default_url_options@ in the corresponding environment file, eg. see @test.rb@
* Use @AREL@ or @meta-where@ to build complex scopes in @Prediction@
* Scopes in @Prediction@ should be made chainable, to be used like @Prediction.recent.limit(10)@ instead of @Prediction.limit(10).recent@
* Rewrite @access_control_spec@
* Upgrade JQuery and related plugins
* Use @sorcery* or *devise* for authentication.
* Enable asset pipeline

h3. Code Style guides

* "Ruby Style Guide":https://github.com/bbatsov/ruby-style-guide/blob/master/README.md
* "Rails Style Guide":https://github.com/bbatsov/rails-style-guide/blob/master/README.md

